{"version":3,"sources":["webpack:///src/app/feed/feed.module.ts","webpack:///src/app/feed/feed.page.html","webpack:///src/app/feed/feed.page.ts"],"names":["routes","path","component","FeedPageModule","FeedPage","navCtrl","loadingCtrl","toastCtrl","camera","http","router","services","actionSheetCtrl","alertCtrl","modalCtrl","firebaseCordova","text","posts","pageSize","getPosts","getUser","authState","subscribe","user","console","log","userID","uid","getProfile","navigateByUrl","id","data","length","empty","item","payload","doc","photoUrl","img","token","collection","set","tokenUpdate","FieldValue","serverTimestamp","merge","then","err","loading","create","message","loadPost","query","orderBy","limit","onSnapshot","snapshot","changedDocs","docChanges","forEach","change","type","i","get","docs","push","dismissLoading","cursor","dismiss","event","setTimeout","target","complete","startAfter","size","disabled","infiniteEvent","post","add","created","owner","currentUser","owner_name","displayName","owner_photo","photoURL","image","upload","undefined","duration","present","time","difference","diff","humanize","signOut","navigateRoot","launchCamera","options","quality","sourceType","PictureSourceType","CAMERA","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","PNG","mediaType","MediaType","PICTURE","correctOrientation","targetHeight","targetWidth","allowEdit","getPicture","base64Image","backdropDismiss","buttons","cssClass","handler","alert","name","Promise","resolve","reject","ref","uploadTask","putString","split","on","taskSnapshot","percentage","bytesTransferred","totalBytes","error","getDownloadURL","url","update","body","postId","userId","action","likes","JSON","stringify","responseType","viewAllComments","newComment","mainAction","comments","componentProps","header","inputs","comment","commentToast","commentErrorToast","deleteAction","_post","deleteToast","deleteError"],"mappings":"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","file":"feed-feed-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { FeedPage } from './feed.page';\nimport { CommentsPage } from '../comments/comments.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FeedPage\n    }\n];\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        IonicModule,\n        RouterModule.forChild(routes)\n    ],\n    declarations: [FeedPage],\n    entryComponents: []\n})\nexport class FeedPageModule { }\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Feed</ion-title>\n    <ion-title mode=\"ios\" color=\"primary\"></ion-title>\n  </ion-toolbar>\n</ion-header>\n\n\n<ion-content fullscreen>\n  <!-- \n  <ion-row margin class=\"rowStyle\">\n    <button ion-button icon-only color=\"primary\" clear (click)=\"addPhoto()\">\n      <ion-icon name=\"images\"></ion-icon>\n    </button>\n\n    <ion-input type=\"text\" placeholder=\"Say something...\" [(ngModel)]=\"text\"></ion-input>\n\n    <button ion-button icon-only color=\"primary\" clear (click)=\"post()\">\n      <ion-icon name=\"send\"></ion-icon>\n    </button>\n  </ion-row>\n\n  <ion-row margin class=\"rowStyle\" *ngIf=\"image\">\n\n    <ion-card class=\"round-corners\">\n      <ion-badge class=\"badge\">\n        <ion-icon name=\"close\" class=\"close-icon\" (click)=\"openAlert()\"></ion-icon>\n      </ion-badge>\n      <img [src]=\"image\" class=\"round-corners\">\n    </ion-card>\n  </ion-row> -->\n\n  <ion-refresher (ionRefresh)=\"refresh($event)\">\n    <ion-refresher-content pullingIcon=\"chevron-down-circle-outline\" pullingText=\"Pull to refresh\"\n      refreshingSpinner=\"circles\" refreshingText=\"Refreshing...\"></ion-refresher-content>\n  </ion-refresher>\n\n\n  <ion-card *ngFor=\"let post of posts\">\n    {{ post.data() | json  }}\n\n    <!-- <ion-item-divider color=\"primary\"> -->\n    <ion-item color=\"primary\">\n      <ion-avatar item-start>\n        <img [src]=\"post.data().owner_photo\" *ngIf=\"post.data().owner_photo\">\n        <img src=\"https://gravatar.com/avatar/dba6bae8c566f9d4041fb9cd9ada7741?d=identicon&f=y\"\n          *ngIf=\"!post.data().owner_photo\">\n      </ion-avatar>\n      <p class=\"ion-padding-horizontal\">@{{ post.data().owner_name }}</p>\n\n      <ion-col class=\"ion-text-end\">\n        <button *ngIf=\"userID === post.data().owner\" ion-button (click)=\"deleteAction(post)\">\n          <ion-icon class=\"icon\" name=\"trash\"></ion-icon>\n        </button>\n      </ion-col>\n    </ion-item>\n    <!-- </ion-item-divider> -->\n\n\n    <img [src]=\"post.data().image\" *ngIf=\"post.data().image\">\n\n    <ion-card-content>\n      <p>\n        {{ post.data().text }}\n      </p>\n    </ion-card-content>\n\n\n\n    <ion-row class=\"bottom-bar\">\n      <ion-col>\n        <button ion-button class=\"text\" clear small (click)=\"like(post)\">\n          <ion-icon class=\"icon\" name=\"thumbs-up\"></ion-icon>\n          {{ post?.data().likesCount || 0 }}\n        </button>\n      </ion-col>\n\n      <ion-col>\n        <button class=\"text\" (click)=\"comment(post)\">\n          <ion-icon class=\"icon\" name=\"text\"></ion-icon>\n          {{post.data().commentsCount || 0}}\n        </button>\n      </ion-col>\n\n      <ion-col>\n        <button ion-button class=\"text\" clear small>\n          <ion-icon class=\"icon\" name=\"time\"></ion-icon>\n          {{ ago(post.data().created.toDate()) }}\n        </button>\n\n      </ion-col>\n\n\n\n    </ion-row>\n\n  </ion-card>\n\n  <ion-infinite-scroll (ionInfinite)=\"loadMorePosts($event)\">\n    <ion-infinite-scroll-content loadingSpinner=\"bubbles\" loadingText=\"Loading...\">\n    </ion-infinite-scroll-content>\n  </ion-infinite-scroll>\n\n</ion-content>","import { Component, ViewChild } from '@angular/core';\nimport { NavController, LoadingController, ToastController, ActionSheetController, AlertController, ModalController } from '@ionic/angular';\nimport { HttpClient } from '@angular/common/http';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { CommentsPage } from '../comments/comments.component';\nimport * as firebase from 'firebase';\nimport * as moment from 'moment';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { Router } from '@angular/router';\nimport { ServicesService } from '../services/services.service';\nimport { IonInfiniteScroll } from '@ionic/angular';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.page.html',\n  styleUrls: ['./feed.page.scss'],\n})\nexport class FeedPage {\n  @ViewChild(IonInfiniteScroll, { static: true }) infiniteScroll: IonInfiniteScroll;\n  text: string = \"\";\n  posts: any[] = [];\n  pageSize: number = 10;\n  cursor: any;\n  infiniteEvent: any;\n  image: string;\n  userID: any;\n  photoUrl: any;\n  item: any;\n  empty: Boolean;\n  public loading: HTMLIonLoadingElement;\n\n  constructor(public navCtrl: NavController, private loadingCtrl: LoadingController, private toastCtrl: ToastController, private camera: Camera, private http: HttpClient, private router: Router, private services: ServicesService, private actionSheetCtrl: ActionSheetController, private alertCtrl: AlertController, private modalCtrl: ModalController, private firebaseCordova: AngularFireAuth) {\n    this.getPosts();\n    this.getUser();\n  }\n\n  getUser() {\n    this.firebaseCordova.authState\n      .subscribe(\n        user => {\n          if (user) {\n            console.log(user);\n            console.log('authorized user');\n            this.userID = user.uid;\n            console.log(this.userID);\n            this.getProfile(this.userID);\n          } else {\n            this.router.navigateByUrl('/login');\n          }\n        },\n        () => {\n          this.router.navigateByUrl('/login');\n        }\n      );\n  }\n\n\n  async getProfile(id: any) {\n    this.services.getProfile(id).subscribe((data => {\n      console.log(data);\n      if (data.length === 0) {\n        this.empty = false;\n        console.log('empty');\n      } else {\n        this.empty = true;\n        this.item = data;\n        this.userID = data[0].payload.doc.data().uid\n        this.photoUrl = data[0].payload.doc.data().img;\n      }\n    }));\n  }\n\n\n\n  updateToken(token: string, uid: string) {\n\n    firebase.firestore().collection(\"users\").doc(uid).set({\n      token: token,\n      tokenUpdate: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    }).then(() => {\n      console.log(\"token saved to cloud firestore\");\n    }).catch(err => {\n      console.log(err);\n    })\n\n  }\n\n\n  async loadPost() {\n    const loading = this.loadingCtrl.create({\n      message: \"Loading Feed...\"\n    });\n    return loading;\n  }\n\n  getPosts() {\n\n    this.posts = [];\n\n    this.loadPost();\n\n    let query = firebase.firestore().collection(\"posts\").orderBy(\"created\", \"desc\").limit(this.pageSize);\n\n    query.onSnapshot((snapshot) => {\n      let changedDocs = snapshot.docChanges();\n\n\n\n      changedDocs.forEach((change) => {\n        if (change.type == \"added\") {\n          // TODO\n        }\n\n        if (change.type == \"modified\") {\n          for (let i = 0; i < this.posts.length; i++) {\n            if (this.posts[i].id == change.doc.id) {\n              this.posts[i] = change.doc;\n              console.log(this.posts)\n            }\n          }\n        }\n\n        if (change.type == \"removed\") {\n          // TODO\n        }\n      })\n    })\n\n    query.get()\n      .then((docs) => {\n        docs.forEach((doc) => {\n          this.posts.push(doc);\n        })\n        this.dismissLoading()\n        this.cursor = this.posts[this.posts.length - 1];\n\n        console.log(this.posts)\n\n      }).catch((err) => {\n        console.log(err)\n      })\n  }\n\n  public async dismissLoading(): Promise<void> {\n    if (this.loading) {\n      this.loading.dismiss();\n    }\n  }\n\n  loadMorePosts(event: any) {\n    setTimeout(() => {\n      console.log('Done');\n      event.target.complete();\n      firebase.firestore().collection(\"posts\").orderBy(\"created\", \"desc\").startAfter(this.cursor).limit(this.pageSize).get()\n        .then((docs) => {\n\n          docs.forEach((doc) => {\n            this.posts.push(doc);\n          })\n\n          console.log(this.posts)\n\n          if (docs.size < this.pageSize) {\n            // all documents have been loaded\n            event.target.disabled = true;\n            this.infiniteEvent = event;\n          } else {\n            event.target.complete();\n            this.cursor = this.posts[this.posts.length - 1];\n          }\n\n        }).catch((err) => {\n          console.log(err)\n        })\n      // App logic to determine if all data is loaded\n      // and disable the infinite scroll\n      if (this.post.length == 100) {\n        event.target.disabled = true;\n      }\n    }, 500);\n  }\n\n  refresh(event: any) {\n\n    this.posts = [];\n\n    this.getPosts();\n\n    if (this.infiniteEvent) {\n      setTimeout(() => {\n        this.infiniteEvent.target.disabled = true;\n        event.target.complete();\n      }, 2000);\n    }\n    event.target.complete();\n  }\n\n  post() {\n\n    firebase.firestore().collection(\"posts\").add({\n      text: this.text,\n      created: firebase.firestore.FieldValue.serverTimestamp(),\n      owner: firebase.auth().currentUser.uid,\n      owner_name: firebase.auth().currentUser.displayName,\n      owner_photo: firebase.auth().currentUser.photoURL,\n    }).then(async (doc) => {\n      console.log(doc)\n\n      if (this.image) {\n        await this.upload(doc.id)\n      }\n\n      this.text = \"\";\n      this.image = undefined;\n\n      (await this.toastCtrl.create({\n        message: \"Your post has been created successfully.\",\n        duration: 2000\n      })).present();\n\n      this.getPosts();\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n  ago(time: any) {\n    let difference = moment(time).diff(moment());\n    return moment.duration(difference).humanize();\n  }\n\n  logout() {\n\n    firebase.auth().signOut().then(async () => {\n\n      (await this.toastCtrl.create({\n        message: \"You have been logged out successfully.\",\n        duration: 2000\n      })).present();\n\n      this.navCtrl.navigateRoot('/feed');\n    });\n\n  }\n\n  addPhoto() {\n\n    this.launchCamera();\n\n  }\n\n  launchCamera() {\n    let options: CameraOptions = {\n      quality: 100,\n      sourceType: this.camera.PictureSourceType.CAMERA,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.PNG,\n      mediaType: this.camera.MediaType.PICTURE,\n      correctOrientation: true,\n      targetHeight: 512,\n      targetWidth: 512,\n      allowEdit: true\n    }\n\n    this.camera.getPicture(options).then((base64Image) => {\n      console.log(base64Image);\n\n      this.image = \"data:image/png;base64,\" + base64Image;\n\n\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n  async openAlert() {\n    const alert = await this.alertCtrl.create({\n      message: 'Sure want to delete this!!!',\n      backdropDismiss: false,\n      buttons: [\n        {\n          text: 'Delete',\n          cssClass: 'secondary',\n          handler: () => {\n            // this.delete(index);\n            this.image = '';\n          }\n        }, {\n          text: 'Cancel',\n          handler: () => {\n            console.log('Cancel');\n\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  upload(name: string) {\n\n    return new Promise(async (resolve, reject) => {\n\n      let loading = this.loadingCtrl.create({\n        message: \"Uploading Image...\"\n      });\n\n      (await loading).present();\n\n      let ref = firebase.storage().ref(\"postImages/\" + name);\n\n      let uploadTask = ref.putString(this.image.split(',')[1], \"base64\");\n\n      uploadTask.on(\"state_changed\", (taskSnapshot: any) => {\n        console.log(taskSnapshot)\n        let percentage = taskSnapshot.bytesTransferred / taskSnapshot.totalBytes * 100;\n        this.loadingCtrl.create({\n          message: `Uploaded ${percentage} % ...`\n        });\n      }, (error) => {\n        console.log(error)\n      }, () => {\n        console.log(\"The upload is complete!\");\n\n\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n\n          firebase.firestore().collection(\"posts\").doc(name).update({\n            image: url\n          }).then(() => {\n            this.dismissLoading();\n            resolve()\n          }).catch((err) => {\n            this.dismissLoading();\n            reject()\n          })\n\n        }).catch((err) => {\n          this.dismissLoading();\n          reject()\n        })\n\n      })\n\n    })\n\n  }\n\n  like(post: any) {\n\n    let body = {\n      postId: post.id,\n      userId: firebase.auth().currentUser.uid,\n      action: post.data().likes && post.data().likes[firebase.auth().currentUser.uid] == true ? \"unlike\" : \"like\"\n    }\n\n    // // let toast = this.toastCtrl.create({\n    // //   message: \"Updating like... Please wait.\"\n    // // });\n\n    // toast.present();\n\n\n    this.http.post(\"https://us-central1-ploonu-1c84c.cloudfunctions.net/updateLikesCount\", JSON.stringify(body), {\n      responseType: \"text\"\n    }).subscribe((data) => {\n      console.log(data)\n\n      // toast.setMessage(\"Like updated!\");\n      // setTimeout(() => {\n      //   toast.dismiss();\n      // }, 1500)\n    }, (error) => {\n      // toast.setMessage(\"An error has occured. Please try again later.\")\n      // setTimeout(() => {\n      //   toast.dismiss();\n      // }, 1500)\n      console.log(error)\n    })\n\n  }\n\n  async comment(post: any) {\n    let mainAction = await this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: \"View All Comments\",\n          handler: () => {\n            this.viewAllComments(post);\n          }\n        },\n        {\n          text: \"New Comment\",\n          handler: () => {\n            this.newComment(post);\n          }\n        }\n      ]\n    })\n    await mainAction.present();\n  }\n\n  async viewAllComments(post: any) {\n    const comments = this.modalCtrl.create({\n      component: CommentsPage,\n      componentProps: {\n        'post': post\n      }\n    });\n    return (await comments).present();\n  }\n\n  async newComment(post: any) {\n    const newComment = this.alertCtrl.create({\n      header: \"New Comment\",\n      message: \"Type your comment\",\n      inputs: [\n        {\n          name: \"comment\",\n          type: \"text\"\n        }\n      ],\n      buttons: [\n        {\n          text: \"Cancel\",\n          handler: () => { }\n        },\n        {\n          text: \"Post\",\n          handler: async (data) => {\n\n            if (data.comment) {\n\n              firebase.firestore().collection(\"comments\").add({\n                text: data.comment,\n                post: post.id,\n                owner: firebase.auth().currentUser.uid,\n                owner_name: firebase.auth().currentUser.displayName,\n                created: firebase.firestore.FieldValue.serverTimestamp()\n              }).then(async (doc) => {\n                console.log(doc);\n                let commentToast = await this.toastCtrl.create({\n                  message: \"Comment posted successfully.\",\n                  duration: 3000\n                });\n                commentToast.present();\n              }).catch(async (err) => {\n                let commentErrorToast = await this.toastCtrl.create({\n                  message: err.message,\n                  duration: 3000\n                });\n                await commentErrorToast.present();\n              });\n            }\n\n          }\n        }\n      ]\n    })\n\n    await (await newComment).present();\n  }\n\n  async deleteAction(post: any) {\n    let deleteAction = await this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: \"Delete\",\n          handler: () => {\n            this.delete(post);\n          }\n        },\n        {\n          text: \"Cancel\",\n          handler: () => { }\n        },\n      ]\n    })\n    await deleteAction.present();\n  }\n\n  async delete(post: any) {\n    if (firebase.auth().currentUser.uid === post.data().owner) {\n      let _post = firebase.firestore().collection('posts');\n      try {\n        await _post.doc(post.id).delete();\n        const deleteToast = await this.toastCtrl.create({\n          message: 'Deleted',\n          duration: 2100\n        })\n        await deleteToast.present();\n        this.getPosts();\n      }\n      catch (err) {\n        const deleteError = await this.toastCtrl.create({\n          message: err.message,\n          duration: 2100\n        })\n        await deleteError.present();\n      }\n    }\n  }\n}\n"]}