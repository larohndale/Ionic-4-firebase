{"version":3,"sources":["webpack:///src/app/tab2/tab2.module.ts","webpack:///src/app/tab2/tab2.page.html","webpack:///src/app/tab2/tab2.page.ts"],"names":["routes","path","component","Tab2PageModule","Tab2Page","navCtrl","loadingCtrl","toastCtrl","camera","http","router","services","actionSheetCtrl","alertCtrl","modalCtrl","firebaseCordova","text","userName","getUser","authState","subscribe","user","console","log","userID","uid","displayName","getProfile","navigateByUrl","id","data","payload","doc","length","empty","item","username","photoUrl","img","token","collection","set","tokenUpdate","FieldValue","serverTimestamp","merge","then","err","loading","dismiss","launchCamera","options","quality","sourceType","PictureSourceType","CAMERA","destinationType","DestinationType","DATA_URL","encodingType","EncodingType","PNG","mediaType","MediaType","PICTURE","correctOrientation","targetHeight","targetWidth","allowEdit","getPicture","base64Image","image","add","created","owner","currentUser","owner_name","owner_photo","upload","undefined","create","message","duration","present","time","difference","diff","humanize","name","Promise","resolve","reject","ref","uploadTask","putString","split","on","taskSnapshot","percentage","bytesTransferred","totalBytes","error","snapshot","getDownloadURL","url","update","dismissLoading"],"mappings":"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","file":"tab2-tab2-module-ngfactory-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { Tab2Page } from './tab2.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: Tab2Page\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>Upload</ion-title>\n    <ion-buttons slot=\"end\">\n      <ion-button [routerLink]=\"['/']\">\n        Back\n        <ion-icon mode=\"ios\" color=\"primary\" slot=\"icon-only\" name=\"arrow-back\"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content fullscreen padding>\n\n  <ion-row margin class=\"rowStyle\">\n    <button ion-button icon-only color=\"primary\" clear (click)=\"addPhoto()\">\n      <ion-icon name=\"images\"></ion-icon>\n    </button>\n\n    <ion-input type=\"text\" placeholder=\"Say something...\" [(ngModel)]=\"text\"></ion-input>\n\n    <button ion-button icon-only color=\"primary\" clear (click)=\"post()\">\n      <ion-icon name=\"send\"></ion-icon>\n    </button>\n  </ion-row>\n\n  <ion-row margin class=\"rowStyle\" *ngIf=\"image\">\n\n    <ion-card class=\"round-corners\">\n      <!-- <ion-badge class=\"badge\">\n        <ion-icon name=\"close\" class=\"close-icon\" (click)=\"openAlert()\"></ion-icon>\n      </ion-badge> -->\n      <img [src]=\"image\" class=\"round-corners\">\n    </ion-card>\n  </ion-row>\n</ion-content>","import { Component, OnInit } from '@angular/core';\nimport { NavController, LoadingController, ToastController, ActionSheetController, AlertController, ModalController } from '@ionic/angular';\nimport { Camera, CameraOptions } from '@ionic-native/camera/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ServicesService } from '../services/services.service';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport * as firebase from 'firebase';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: './tab2.page.html',\n  styleUrls: ['./tab2.page.scss'],\n})\nexport class Tab2Page implements OnInit {\n  image: string;\n  userID: any;\n  photoUrl: any;\n  item: any;\n  empty: Boolean;\n  text: string = \"\";\n  userName: string = \"\";\n  public loading: HTMLIonLoadingElement;\n\n  constructor(public navCtrl: NavController, private loadingCtrl: LoadingController, private toastCtrl: ToastController, private camera: Camera, private http: HttpClient, private router: Router, private services: ServicesService, private actionSheetCtrl: ActionSheetController, private alertCtrl: AlertController, private modalCtrl: ModalController, private firebaseCordova: AngularFireAuth) { }\n\n  ngOnInit() {\n    this.getUser();\n  }\n\n  getUser() {\n    this.firebaseCordova.authState\n      .subscribe(\n        user => {\n          if (user) {\n            console.log('authorized user');\n            this.userID = user.uid;\n            this.userName = user.displayName\n            console.log(this.userID);\n            this.getProfile(this.userID);\n          } else {\n            this.router.navigateByUrl('/login');\n          }\n        },\n        () => {\n          this.router.navigateByUrl('/login');\n        }\n      );\n  }\n\n\n  async getProfile(id: any) {\n    this.services.getProfile(id).subscribe((data => {\n      console.log(data[0].payload.doc.data());\n      if (data.length === 0) {\n        this.empty = false;\n        console.log('empty');\n      } else {\n        this.empty = true;\n        this.item = data;\n        this.userName = data[0].payload.doc.data().username;\n        this.photoUrl = data[0].payload.doc.data().img\n      }\n    }));\n  }\n\n\n  updateToken(token: string, uid: string) {\n\n    firebase.firestore().collection(\"users\").doc(uid).set({\n      token: token,\n      tokenUpdate: firebase.firestore.FieldValue.serverTimestamp()\n    }, {\n      merge: true\n    }).then(() => {\n      console.log(\"token saved to cloud firestore\");\n    }).catch(err => {\n      console.log(err);\n    })\n\n  }\n\n  public async dismissLoading(): Promise<void> {\n    if (this.loading) {\n      this.loading.dismiss();\n    }\n  }\n\n  addPhoto() {\n\n    this.launchCamera();\n\n  }\n\n  launchCamera() {\n    let options: CameraOptions = {\n      quality: 100,\n      sourceType: this.camera.PictureSourceType.CAMERA,\n      destinationType: this.camera.DestinationType.DATA_URL,\n      encodingType: this.camera.EncodingType.PNG,\n      mediaType: this.camera.MediaType.PICTURE,\n      correctOrientation: true,\n      targetHeight: 512,\n      targetWidth: 512,\n      allowEdit: true\n    }\n\n    this.camera.getPicture(options).then((base64Image) => {\n      console.log(base64Image);\n\n      this.image = \"data:image/png;base64,\" + base64Image;\n\n\n    }).catch((err) => {\n      console.log(err)\n    })\n  }\n\n\n  post() {\n\n    firebase.firestore().collection(\"posts\").add({\n      text: this.text,\n      created: firebase.firestore.FieldValue.serverTimestamp(),\n      owner: firebase.auth().currentUser.uid,\n      owner_name: this.userName,\n      owner_photo: this.photoUrl,\n    }).then(async (doc) => {\n      console.log(doc)\n\n      if (this.image) {\n        await this.upload(doc.id)\n      }\n\n      this.text = \"\";\n      this.image = undefined;\n\n      (await this.toastCtrl.create({\n        message: \"Your post has been created successfully.\",\n        duration: 2000\n      })).present();\n      this.router.navigateByUrl('/tabs/feed')\n    }).catch((err) => {\n      console.log(err)\n    })\n\n  }\n\n  ago(time: any) {\n    let difference = moment(time).diff(moment());\n    return moment.duration(difference).humanize();\n  }\n  upload(name: string) {\n\n    return new Promise(async (resolve, reject) => {\n\n      let loading = this.loadingCtrl.create({\n        message: \"Uploading Image...\"\n      });\n\n      (await loading).present();\n\n      let ref = firebase.storage().ref(\"postImages/\" + name);\n\n      let uploadTask = ref.putString(this.image.split(',')[1], \"base64\");\n\n      uploadTask.on(\"state_changed\", (taskSnapshot: any) => {\n        console.log(taskSnapshot)\n        let percentage = taskSnapshot.bytesTransferred / taskSnapshot.totalBytes * 100;\n        this.loadingCtrl.create({\n          message: `Uploaded ${percentage} % ...`\n        });\n      }, (error) => {\n        console.log(error)\n      }, () => {\n        console.log(\"The upload is complete!\");\n\n\n        uploadTask.snapshot.ref.getDownloadURL().then((url) => {\n\n          firebase.firestore().collection(\"posts\").doc(name).update({\n            image: url\n          }).then(() => {\n            this.dismissLoading();\n            resolve()\n          }).catch((err) => {\n            this.dismissLoading();\n            reject()\n          })\n\n        }).catch((err) => {\n          this.dismissLoading();\n          reject()\n        })\n\n      })\n\n    })\n\n  }\n\n\n}\n"]}